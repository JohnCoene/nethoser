?tidyr::separate_rows
?dplyr::distinct
devtools::document()
library(nethoser)
data("webhoser")
graph <- webhoser %>%
net_entities(entities.persons)
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
data <- webhoser
data %>%
{
if(tgt)
select(doc = uuid, from = !!from_enquo) %>% mutate(to = from)
else
select(doc = uuid, from = !!from_enquo, to = !!to_enquo)
}
tgt <- F
data %>%
{
if(tgt)
select(doc = uuid, from = !!from_enquo) %>% mutate(to = from)
else
select(doc = uuid, from = !!from_enquo, to = !!to_enquo)
}
data %>%
{
ifelse(tgt,
select(doc = uuid, from = !!from_enquo) %>% mutate(to = from),
select(doc = uuid, from = !!from_enquo, to = !!to_enquo))
}
data %>%
{
if(tgt)
. %>% select(doc = uuid, from = !!from_enquo) %>% mutate(to = from)
else
. %>% select(doc = uuid, from = !!from_enquo, to = !!to_enquo)
}
ata %>%
{
if(tgt)
. %>% select(., doc = uuid, from = !!from_enquo) %>% mutate(to = from)
else
select(., doc = uuid, from = !!from_enquo, to = !!to_enquo)
}
data %>%
{
if(tgt)
. %>% select(., doc = uuid, from = !!from_enquo) %>% mutate(to = from)
else
select(., doc = uuid, from = !!from_enquo, to = !!to_enquo)
}
devtools::document()
devtools::check()
library(nethoser)
webhoser %>%
net_entities(entities.persons)
webhoser %>%
net_entities(entities.persons, entities.organizations)
library(nethoser)
webhoser %>%
net_entities(entities.persons, entities.organizations)
library(nethoser)
data("webhoser")
data <- webhoser
edges <- data %>%
select(doc = uuid, from = entities.persons)
edges <- data %>%
dplyr::select(doc = uuid, from = entities.persons)
head(edges)
edges <- data %>%
dplyr::select(doc = uuid, from = entities.persons) %>%
mutate(to = entities.persons)
edges <- data %>%
dplyr::select(doc = uuid, from = entities.persons) %>%
dplyr::mutate(to = entities.persons)
edges <- data %>%
dplyr::select(doc = uuid, from = entities.persons) %>%
dplyr::mutate(to = from)
head(edges)
edges %>%
distinct() %>%
filter(from != "", to != "") %>%
tidyr::separate_rows(from, sep = ",") %>%
tidyr::separate_rows(to, sep = ",") %>%
head
library(dplyr)
edges %>%
distinct() %>%
filter(from != "", to != "") %>%
tidyr::separate_rows(from, sep = ",") %>%
tidyr::separate_rows(to, sep = ",") %>%
head
edges %>%
distinct() %>%
filter(from != "", to != "") %>%
tidyr::separate_rows(from, sep = ",") %>%
tidyr::separate_rows(to, sep = ",") %>%
filter(from > to) %>%
edges %>%
distinct() %>%
filter(from != "", to != "") %>%
tidyr::separate_rows(from, sep = ",") %>%
tidyr::separate_rows(to, sep = ",") %>%
filter(from > to) %>%
head
edges %>%
distinct() %>%
filter(from != "", to != "") %>%
tidyr::separate_rows(from, sep = ",") %>%
tidyr::separate_rows(to, sep = ",") %>%
filter(from > to)
data("webhoser")
webhoser %>%
ent2ent(entities.persons)
devtools::document()
library(nethoser)
data("webhoser")
webhoser %>%
ent2ent(entities.persons)
library(sigmajs)
devtools::document()
library(nethoser)
data("webhoser")
# make network
graph <- webhoser %>%
net_entities(entities.persons)
# unpack
c(nodes, edges) %<-% graph
# plot
plot(graph)
# make network
graph <- webhoser %>%
ent2ent(entities.persons)
# unpack
c(nodes, edges) %<-% graph
# plot
plot(graph)
graph
library(nethoser)
# make network
graph <- webhoser %>%
ent2ent(entities.persons)
# unpack
c(nodes, edges) %<-% graph
# plot
plot(graph)
graph
plot(graph)
x <- graph
nodes <- x$nodes %>%
select(label = entity, size = n) %>%
mutate(id = label)
nodes <- x$edges %>%
select(source, target, weight = n) %>%
mutate(id = 1:dplyr::n())
sigmajs() %>%
sg_nodes(nodes, id, label, size) %>%
sg_edges(edges, id, source, target, weight) %>%
sg_layout() %>%
sg_cluster() %>%
sg_drag_nodes()
library(nethoser)
# make network
graph <- webhoser %>%
ent2ent(entities.persons)
# unpack
c(nodes, edges) %<-% graph
# plot
plot(graph)
data("webhoser")
# make network
graph <- webhoser %>%
ent2ent(entities.persons)
data("webhoser")
# make network
graph <- webhoser %>%
ent2ent(thread.site)
graph
data("webhoser")
# make network
graph <- webhoser %>%
ent2ent(thread.site, entities.persons)
graph
plot(graph)
data("webhoser")
# make network
graph <- webhoser %>%
connect(entities.persons)
# unpack
c(nodes, edges) %<-% graph
# make network
graph <- webhoser %>%
ent2ent(entities.persons)
# unpack
c(nodes, edges) %<-% graph
dim(graph)
dim(list(1, 2))
length(graph)
data("webhoser")
# make network
webhoser %>%
connect(thread.site, entities.persons) %>%
plot(graph)
devtools::document()
library(nethoser)
data("webhoser")
# make network
webhoser %>%
connect(thread.site, entities.persons) %>%
plot(graph)
webhoser %>%
connect(thread.site, entities.persons) %>%
visualize(graph)
# make network
webhoser %>%
connect(thread.site, entities.persons) %>%
visualize()
devtools::document()
devtools::check()
graph <- webhoser %>%
connect(entities.persons, entities.locations)
devtools::document()
devtools::check()
,
devtools::document()
devtools::document()
devtools::source_gist()
devtools::source_gist()
devtools::check()
devtools::document()
devtools::check()
library(nethoser)
usethis::use_readme_md()
data("webhoser")
# make network
webhoser %>%
connect(entities.persons) %>%
plot(graph)
data("webhoser")
# make network
webhoser %>%
connect(entities.persons) %>%
visualise()
?usethis::use_lifecycle_badge()
usethis::use_lifecycle_badge("Maturing")
usethis::use_lifecycle_badge("Experimental")
devtools::document()
